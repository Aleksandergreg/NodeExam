version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db: # <-- Change this section
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    environment:
      # ... your environment variables are correct here ...
      - PORT=8080
      - FRONTEND_URL=http://localhost:5173
      - SESSION_SECRET=${SESSION_SECRET}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - MAILERSEND_API_KEY=${MAILERSEND_API_KEY}
      - MAILERSEND_FROM_EMAIL=no-reply@example.com
      - MAILERSEND_FROM_NAME="Your App Name"
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SPORTRADAR_API_KEY=${SPORTRADAR_API_KEY}
      - WEATHERBIT_API_KEY=${WEATHERBIT_API_KEY}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379


  db:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./server/schemas:/docker-entrypoint-initdb.d
    networks:
      - app-network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    healthcheck: # <-- Add this entire block
      test: ["CMD-SHELL", "pg_isready -U myappuser -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck: # <-- Also good practice to add a healthcheck for redis
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: